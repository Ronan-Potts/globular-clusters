---
title: "Presentation Code"
date: "`r Sys.Date()`"
author: "Ronan Potts"
format: 
  html: 
    self-contained: true # Creates a single HTML file as output
    code-fold: true # Code folding; allows you to show/hide code chunks
    code-tools: true # Includes a menu to download the code file
    df-print: paged
execute:
  warning: false
table-of-contents: true # (Optional) Creates a table of contents!
number-sections: true # (Optional) Puts numbers next to heading/subheadings
---

# Setup

## Packages

```{r}
library(tidyverse)
```

## Data - gc_summary

```{r}
gc_summary = read.csv("../../data/clean-clusters/GCs_Summary_2.txt", sep=",")

# gc_summary
```

## Data - Harris

```{r}
h_data <- read.csv("../../data/clusters-harris/clean/merged_data.txt")

# h_data
```

## Data - Individual GC

```{r}
gc_data <- function(gcName){
  read.csv(paste("../../data/clean-clusters/catalogues/", gcName, ".txt", sep=""),sep=',')
}

# gc_data("NGC_104_47Tuc")
```

## Data - Isochrone

```{r}
iso_data <- function(gcName, isoNum){
  read.csv(paste("../../data/isochrones/clean/", gcName, "/isochrone_", isoNum, ".txt", sep=""),sep=',')
}

# iso_data("NGC_104_47Tuc", "1")
```

## Best Fitting Isochrones

```{r}
bf_iso <- function(gcName){
  gc_iso_fit = read.csv("../../data/clean-clusters/GCs_real_fitting_isochrones_2.txt", sep=",")
  gc_iso_fit$get(paste(gcName, ".txt", sep=""))
}
```

# Detecting Rotating GCs

## Velocity Distribution

```{r}
gcName = "NGC_104_47Tuc"

# First, get Harris data for a specific GC
gc_h_data <- h_data |>
  filter(Name == paste(gcName, ".txt", sep=""))

# Get GC data as well
gc_f_data <- gc_data(gcName)

# A few constants
R_sun = gc_h_data$R_sun
num_stars = length(gc_f_data[,1])
# Unit Conversions
mas_to_rad = (2*pi)/(360*3600*1000)
kPc_to_km = 3.086e+16
yr_to_s = 60*60*24*365



# ____ ACTUALLY GENERATING THE CURVE ______________________________________________

# Bin x values and calculate mean/se of data in each x bin
b_f_data = gc_f_data |>
  mutate(binned_data = cut(r, breaks=50)) |>
  group_by(binned_data) |>
  summarise(r = mean(r), vP = mean(vPhi), se = sd(vPhi)/sqrt(n()))
      
# non-linear regression (nls) on data using eq 1 from https://arxiv.org/pdf/1305.6025.pdf
variables = nls(
  vP ~ I(E-(omega*r)/(1+b*(r^(2*cpow)))),
  data=b_f_data,
  start=list(E=0, omega=2, b=50, cpow=1))
      
# Add rows containing y values of fitted curve at each x value, and the ribbon y range
b_f_data = b_f_data |>
  mutate(nls_vP = predict(variables, r),
         nls_min = nls_vP - se,
         nls_max = nls_vP + se)
      
# Plot curve
p = b_f_data |>
    ggplot(
      aes(x=r, y=vP)
      ) +
    geom_point(
      colour="#00c3ff"
      ) +
    labs(
      x="Radius (mas)",
      y="Tangential Velocity (mas/yr)"
      ) +
    geom_function(
      fun = function(x) I(E-(omega*x)/(1+b*(x^(2*cpow))))
      ) +
    geom_ribbon(
      aes(ymin=nls_min, ymax=nls_max),
      alpha=0.2
      ) +
    scale_x_continuous(
      sec.axis = sec_axis(
        trans = ~ . * R_sun * kPc_to_km * mas_to_rad,
        name = "Radius (km)")
      ) + 
    scale_y_continuous(
      sec.axis = sec_axis(
        trans = ~ . * R_sun * kPc_to_km * mas_to_rad / yr_to_s,
        name = "Tangential Velocity (km/s)")
      )


# Find Maximum Tangential Velocity

peak_data = b_f_data |>
  filter(abs(nls_vP) == max(abs(nls_vP)))
         
v_p = peak_data$nls_vP
error = peak_data$se
r_p = peak_data$r


# Label Maximum Tangential Velocity

if (v_p > 0) {
  p = p + annotate("text", label=paste0("v_p = ", signif(v_p,2), " +- ", signif(error,1)), x=r_p, y = v_p + 1.5*error)
} else {
  p = p + annotate("text", label=paste0("v_p = ", signif(v_p,2), " +- ", signif(error,1)), x=r_p, y = v_p - 1.5*error)
}
```

```{r}
#| label: fig-velcurve
#| fig-cap: "Velocity Curve for NGC 104 47Tuc" 
p
```

## Using vPhi / vR

We used the ratio mean(vPhi) / mean(vR) over a star population to detect rotation as well. If the ratio is large ($\geq 3$) then the globular cluster is likely rotating and worth looking at in more detail.

# Subpopulations in GCs

## Fitting Isochrones to CMag Diagrams

Introduce isochrones
